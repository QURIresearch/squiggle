import { Model } from "@/model/utils";
import { Catalog, InterfaceWithModels, Item } from "@/types";
import { Map } from "immutable";

// Note: Much of this was generated by this file:
// https://observablehq.com/d/98cbe0073226a5f9

function getCatalog(): Catalog {
  const items: Item[] = [
    {
      id: "funder_openphil_2020",
      clusterId: "funder",
      name: "Open Philanthropy - 2020",
      description:
        "The marginal value of $1, from Open Philanthropy, in the year 2020",
    },
    {
      id: "funder_openphil_2023",
      clusterId: "funder",
      name: "Open Philanthropy - 2023",
      description:
        "The marginal value of $1, from Open Philanthropy, in the year 2023",
    },
    {
      id: "funder_eafund_ltff_2020",
      clusterId: "funder",
      name: "Long-Term Future Fund (EA Funds) - 2020",
      description:
        "The marginal value of $1, from Long-Term Future Fund (EA Funds), in the year 2020",
    },
    {
      id: "funder_eafund_ltff_2023",
      clusterId: "funder",
      name: "Long-Term Future Fund (EA Funds) - 2023",
      description:
        "The marginal value of $1, from Long-Term Future Fund (EA Funds), in the year 2023",
    },
    {
      id: "funder_eafund_animal_welfare_2020",
      clusterId: "funder",
      name: "Animal Fund (EA Funds) - 2020",
      description:
        "The marginal value of $1, from Long-Term Future Fund (EA Funds), in the year 2020",
    },
    {
      id: "funder_eafund_animal_welfare_2023",
      clusterId: "funder",
      name: "Animal Fund (EA Funds) - 2023",
      description:
        "The marginal value of $1, from Long-Term Future Fund (EA Funds), in the year 2023",
    },
    {
      id: "funder_eafund_ea_infrastructure_2020",
      clusterId: "funder",
      name: "EA Infrastructure Fund (EA Funds) - 2020",
      description:
        "The marginal value of $1, from EA Infrastructure Fund (EA Funds), in the year 2020",
    },
    {
      id: "funder_eafund_ea_infrastructure_2023",
      clusterId: "funder",
      name: "EA Infrastructure Fund (EA Funds) - 2023",
      description:
        "The marginal value of $1, from EA Infrastructure Fund (EA Funds), in the year 2023",
    },
    {
      id: "funder_eafund_globalhealth_2020",
      clusterId: "funder",
      name: "Global Health and Development (EA Funds) - 2020",
      description:
        "The marginal value of $1, from Global Health and Development (EA Funds), in the year 2020",
    },
    {
      id: "qaly_human",
      clusterId: "sentient_welfare",
      name: "1 Human QALY",
      description: "",
    },
    {
      id: "qaly_salmon",
      clusterId: "sentient_welfare",
      name: "1 Salmon QALY",
    },
    {
      id: "qaly_chicken",
      clusterId: "sentient_welfare",
      name: "1 Chicken QALY",
    },
    {
      id: "qaly_cow",
      clusterId: "sentient_welfare",
      name: "1 Cow QALY",
    },
    {
      id: "macrovariable_microdoom",
      clusterId: "macrovariables",
      name: "1 Microdoom",
    },
    {
      id: "macrovariable_universal_microtopia",
      clusterId: "macrovariables",
      name: "1 Universal Microdoom",
    },
    {
      id: "macrovariable_microtopia",
      clusterId: "macrovariables",
      name: "1 Microtopia",
      description: "",
    }
  ];

  return {
    id: "macrovariables",
    title: "Macrovariables",
    items,
    clusters: {
      macrovariables: {
        name: "macrovariables",
        color: "#DB828C",
      },
      funder: {
        name: "funder",
        color: "#2B828C",
      },
      sentient_welfare: {
        name: "Sentient Welfare",
        color: "#2B828C",
      },
    },
  };
}

function getTextModel(): Model {
  return {
    id: "Macrovariables",
    title: "Macrovariables",
    author: "Ozzie Gooen",
    mode: "text",
    code: `
    ss(t) = SampleSet.fromDist(t)
    longtermism_2020_to_2023 = ss(0.8 to 1.6)
    animals_2020_to_2023 = ss(0.7 to 1.15)
    
    ltff_to_openphil = ss(0.7 to 2.2)
    ea_to_longtermism = ss(0.1 to 3)
   
    human_to_chicken = ss(0.05 to 0.5)
    human_to_cow = ss(0.1 to 0.6)
    human_to_salmon = ss(0.05 to 0.1)

    qaly_human = mx(1)
    qaly_chicken = qaly_human * human_to_chicken 
    qaly_cow = qaly_human * human_to_cow
    qaly_salmon = qaly_human * human_to_salmon 

    qaly_to_utopia = ss((qaly_human * 100 to 1000) * (10E15 to 10E30))

    macrovariable_microtopia = qaly_to_utopia * (1/1M)
    macrovariable_universal_microtopia = macrovariable_microtopia * ss(1.4 to 100)
    macrovariable_microdoom = macrovariable_microtopia * ss(0.1 to 0.6)

    //Key variables
    funder_openphil_2020 = macrovariable_microtopia * ss(1/(100k to 100M))
    funder_openphil_2023 = funder_openphil_2020 * longtermism_2020_to_2023
    
    funder_eafund_ltff_2020 = funder_openphil_2020 * ltff_to_openphil
    funder_eafund_ltff_2023 = funder_eafund_ltff_2020 * longtermism_2020_to_2023

    //Key variables
    funder_eafund_animal_welfare_2020 = (1 / (ss(10 to 1000) * qaly_salmon)) + (1/ss(50 to 500) * funder_openphil_2020)
    funder_eafund_animal_welfare_2023 = funder_eafund_animal_welfare_2020 * animals_2020_to_2023
    funder_eafund_globalhealth_2020 = (1 / (ss(5000 to 150000) * qaly_human)) + (1/ss(50 to 500) * funder_openphil_2020)

    funder_eafund_ea_infrastructure_2020 = (funder_eafund_ltff_2020 * ss(0.1 to 0.6)) + (funder_eafund_globalhealth_2020 * ss(0.01 to 0.5)) + (funder_eafund_animal_welfare_2020 * ss(0.01 to 0.5))
    funder_eafund_ea_infrastructure_2023 = funder_eafund_ea_infrastructure_2020 * ss(0.8 to 1.4)

    vars = {
        funder_openphil_2020: funder_openphil_2020,
        funder_openphil_2023: funder_openphil_2023,
        funder_eafund_ltff_2020: funder_eafund_ltff_2020,
        funder_eafund_ltff_2023: funder_eafund_ltff_2023,
        funder_eafund_animal_welfare_2020: funder_eafund_animal_welfare_2020,
        funder_eafund_animal_welfare_2023: funder_eafund_animal_welfare_2023,
        funder_eafund_ea_infrastructure_2020: funder_eafund_ea_infrastructure_2020,
        funder_eafund_ea_infrastructure_2023: funder_eafund_ea_infrastructure_2023,
        funder_eafund_globalhealth_2020: funder_eafund_globalhealth_2020,
        qaly_human: qaly_human,
        qaly_chicken: qaly_chicken,
        qaly_cow: qaly_cow,
        qaly_salmon: qaly_salmon,
        macrovariable_microdoom: macrovariable_microdoom,
        macrovariable_universal_microtopia: macrovariable_universal_microtopia,
        macrovariable_microtopia: macrovariable_microtopia
    }

    fn(a,b) = vars[a] / vars[b]
`,
  };
}

export function getMacrovariables(): InterfaceWithModels {
  return {
    catalog: getCatalog(),
    models: Map([getTextModel()].map((m) => [m.id, m])),
  };
}
