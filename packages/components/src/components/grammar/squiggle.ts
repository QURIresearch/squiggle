// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
const spec_identifier = {__proto__:null,true:14, false:14, if:34, then:36, else:38}
export const parser = LRParser.deserialize({
  version: 14,
  states: ",rQYQPOOOzQPOOO!iQPO'#C_OOQO'#Cb'#CbO#sQQO'#CeOzQPO'#CpO#xQPO'#CtOOQO'#Cs'#CsQ&^QPOOOOQO'#C{'#C{OOQO'#C}'#C}OzQPO'#C|OOQO'#Dx'#DxO&eQPO'#C^O&jQPO'#DnOOQO'#Dn'#DnQYQPOOOzQPO'#ClOOQO'#Cu'#CuQ%`QPOOO&oQQO,59PO&wQPO,59[O'OQPO'#DpO'TQPO,59`O(kQPO,59dOOQO'#DQ'#DQOOQO'#DS'#DSOOQO'#DU'#DUOOQO'#DW'#DWOOQO'#DY'#DYOOQO'#D['#D[OOQO'#D^'#D^OzQPO,59kOzQPO,59kOzQPO,59kOOQO'#Da'#DaOzQPO,59zOOQO'#Dd'#DdOOQO'#Df'#DfOOQO'#Dh'#DhOOQO'#Dj'#DjOOQO'#Dl'#DlOzQPO,59}OzQPO,59}OzQPO,59}OOQO'#Dr'#DrQ(rQPOOO(wQPO,59hOzQPO,58xOOQO,5:Y,5:YOOQO-E7l-E7lO*[QPO,59WOOQO'#Ch'#ChO*cQQO'#CgO*kQQO1G.kOOQO1G.v1G.vOOQO'#Cw'#CwOOQO,5:[,5:[OOQO-E7n-E7nO*pQPO'#CyO*zQPO'#DzO+SQPO1G/OO,iQPO1G/VO,pQPO1G/VO-`QPO1G/VO.`QPO1G/fO1TQPO1G/iO1[QPO1G/iO1tQPO1G/iOOQO-E7p-E7pO2zQPO1G.dPOQO'#C_'#C_OzQPO1G.rO3RQPO'#DoO3WQQO,59ROzQPO7+$VOzQPO'#DqO3`QPO,5:fOOQO7+$j7+$jO3hQPO7+$^OOQO'#Cj'#CjOOQO,5:Z,5:ZOOQO-E7m-E7mO3oQPO<<GqO3vQPO'#CzOOQO,5:],5:]OOQO-E7o-E7oOzQPO<<GxOOQOAN=]AN=]O4QQPOAN=d",
  stateData: "5Q~O!iOS!jOS~OT[OVROW[OYSOaaOeTOrYO!kQO!oXO!p_O~OT[OVROW[OYSOaaOeTOrYO!kbO!oXO~OSRXeiXjiXriXuiXwiXyiX{iX}iX!PiX!RiX!UiX!XiX!ZiX!]iX!_iX!giX!piX~O!mdO~OjfOehXrhXuhXwhXyhX{hX}hX!PhX!RhX!UhX!XhX!ZhX!]hX!_hX!ghX!phXfhXbhX]hXchX_hX~OehOryOuiOwjOykO{lO}mO!PnO!RoO!UsO!XuO!ZvO!]wO!_xO~O!p}O~P%`OS!QO~O!p!RO~O!k!UO!mZP~Of!XO~P%`O!k!YO~OjfOeharhauhawhayha{ha}ha!Pha!Rha!Uha!Xha!Zha!]ha!_ha!gha!phafhabha]hacha_ha~Of!nP~PzO!p}O~OehOrpaupawpaypa{pa}pa!Ppa!Rpa!Upa!Xpa!Zpa!]pa!_pa!gpa!ppafpabpa]pacpa_pa~Ob!jO~P%`O]!kO!mZX~O!m!mO~O]mXfmX~P%`O]!nOf!nX~Of!pO~OehOryOykO{lO}mO!PnO!RoO!UsO!XuO!ZvO!]wO!_xOusi!gsi!psifsibsi]sicsi_si~OwjO~P+XOwsi~P+XOehOryO!UsO!XuO!ZvO!]wO!_xO~Ousiwsiysi{si}si!Psi!Rsi!gsi!psifsibsi]sicsi_si~P,wOehO!]wOr!Siu!Siw!Siy!Si{!Si}!Si!P!Si!R!Si!U!Si!X!Si!Z!Si!_!Si!g!Si!p!Sif!Sib!Si]!Sic!Si_!Si~OehOr!Viu!Viw!Viy!Vi{!Vi}!Vi!P!Vi!R!Vi!U!Vi!X!Vi!Z!Vi!_!Vi!g!Vi!p!Vif!Vib!Vi]!Vic!Vi_!Vi~O!]wO~P/sO!]!Vi~P/sOehO!UsO!XuO!ZvO!]wO~Or!Viu!Viw!Viy!Vi{!Vi}!Vi!P!Vi!R!Vi!_!Vi!g!Vi!p!Vif!Vib!Vi]!Vic!Vi_!Vi~P1cO!pQi~P%`O!k!rO~O]!kO!mZa~O]!nOf!na~Oc!yO~P%`O_!zO~P%`O]nXfnX~P%`Ou`!Rw`!Ry`!R{`!R}`!R!P`!R!R`!R!g`!R!p`!Rf`!Rb`!R]`!Rc`!R_`!R~P,wO",
  goto: ")X!oPP!p!tPP!xPP!xP#_#bP#eP!xPPP!xPP!x#h#}P$d!x$g$j!x!x$mP!x%SP%_P%kP%kP%kP%kP%kP!x%xP!x&YP&YP&jP&|P&|P']'c'i'o'uPPPPP'{P)UT^O`T]O`w[OPTZ`ahpqrtz{|!Q!j!m!n!yR!WdR!VdR!s!kwVOPTZ`ahpqrtz{|!Q!j!m!n!ywUOPTZ`ahpqrtz{|!Q!j!m!n!yR!ZfR!^hR!w!nwZOPTZ`ahpqrtz{|!Q!j!m!n!ycpWce!T!]!h!q!u!veqWce!T!]!`!h!q!u!vgrWce!T!]!`!a!h!q!u!vmtWce!T!]!`!a!b!f!h!q!u!v!{mzWce!T!]!`!a!b!f!h!q!u!v!{q{Wce!T!]!`!a!b!c!d!f!h!q!u!v!{k|Wce!T!]!`!a!b!h!q!u!v!{Q`OR!S`Q!l!VR!t!lQgUR![gQ!o!^R!x!oQ!OWR!g!OSWO`QcPQeTQ!PZQ!TaQ!]hQ!`pQ!aqQ!brQ!ctQ!dzQ!e{Q!f|Q!h!QQ!q!jQ!u!mQ!v!nR!{!yR!_h",
  nodeNames: "âš  Program Binding VariableName Equals String Boolean Boolean Number LambdaExpr { LambdaArgs LambdaParameter , LambdaParameter } IfExpr if then else ParenExpr ( ) AccessExpr AccessIdentifier Field . Field CallExpr Argument Argument Void UnaryExpr ArithOp - LogicExpr LogicOp || LogicOp && LogicOp > LogicOp < LogicOp <= LogicOp >= LogicOp == ControlExpr ControlOp |> ArithExpr ArithOp * ArithOp / ArithOp ^ ArithOp + ArithOp Statement",
  maxTerm: 78,
  skippedNodes: [0],
  repeatNodeCount: 5,
  tokenData: ")e~RlYZ!ypq#Ors#Wst#utu$^vw%Rxy%^yz%kz{%p{|%u|}%z}!O&P!O!P&U!P!Q'`!Q!['e!^!_'v!_!`(T!`!a(b!c!}$^#Q#R(o#R#S$^#T#o$^#o#p(t#p#q(y#q#r)`$g;'S$^;'S;=`${<%lO$^~#OO!p~~#TP!i~pq#O~#ZTOr#Wrs#js;'S#W;'S;=`#o<%lO#W~#oOT~~#rP;=`<%l#W~#zS!j~OY#uZ;'S#u;'S;=`$W<%lO#u~$ZP;=`<%l#u~$cW!k~tu$^!Q![$^!c!}$^#R#S$^#T#o$^$g;'S$^;'S;=`${<%lO$^~%OP;=`<%l$^~%UPvw%X~%^Ow~~%cPe~yz%f~%kO!o~~%pOf~~%uO!X~~%zO!_~~&PO]~~&UOr~~&]Rj~W~!Q![&f!g!h&t#X#Y&t~&kRW~!Q![&f!g!h&t#X#Y&t~&wR{|'Q}!O'Q!Q!['W~'TP!Q!['W~']PW~!Q!['W~'eO!Z~~'jSW~!O!P&f!Q!['e!g!h&t#X#Y&t~'{P{~!_!`(O~(TO}~~(YPS~!_!`(]~(bO!R~~(gPy~!_!`(j~(oO!P~~(tO!]~~(yOY~R)OQ!mQ!`!a)U#p#q)ZP)ZO!UPP)`OuP~)eO_~",
  tokenizers: [0, 1],
  topRules: {"Program":[0,1],"Statement":[1,63]},
  specialized: [{term: 73, get: value => spec_identifier[value] || -1}],
  tokenPrec: 0
})
