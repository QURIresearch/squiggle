// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
const spec_identifier = {__proto__:null,true:12, false:12, if:30, then:32, else:34}
const spec_syntax = {__proto__:null,"|>":54}
export const parser = LRParser.deserialize({
  version: 14,
  states: ")lOQOPOOOQOPOOOOOO'#Ca'#CaO!^OPO'#ChOOOO'#Cs'#CsO#POPO'#DTOOOO'#Cv'#CvOOOO'#Cx'#CxOOOO'#DV'#DVOOOO'#DT'#DTO#WOPO'#DPQQOPOOO#xOQO'#CeO#}OPO'#CnO$SOPO'#CrO$SOPO'#CjQOOOOOO$SOPO,58xO$SOPO,59wOOOO,59o,59oO$SOPO,59uO$SOPO,59vO$SOPO,59yO$SOPO,59zO$SOPO,59{O$SOPO,59|O$SOPO,59}OOOO,59k,59kOOOO-E6}-E6}O$nOQO,59PO$vOPO,59YO$}OPO'#ChO%bOPO,59^O%iOPO,59UO%pOPO1G.dO%wOPO1G/cO&_OPO1G/aO&uOPO1G/bO']OPO1G/eO'sOPO1G/fO(ZOPO1G/gO(qOPO1G/hO)XOPO1G/iOOOO'#Ch'#ChO)oOQO'#DWO)wOQO1G.kO)|OPO'#DYO*WOPO1G.tOOOO1G.x1G.xO$SOPO1G.pOOOO7+$O7+$OO*]OQO'#DQO*hOQO,59rO$SOPO7+$VO*pOPO'#DRO*zOPO,59tOOOO7+$`7+$`O+SOPO7+$[OOOO,59l,59lOOOO-E7O-E7OO+ZOPO<<GqO+bOPO,59mOOOO-E7P-E7PO$SOPO<<GvOOOOAN=]AN=]O+lOPOAN=b",
  stateData: ",S~OSWOUQOVWOWWOY[O__Od^OxRO~OdcXh[Xi[Xk[Xm[Xn[Xo[Xp[Xq[X!W[X~ORaO~PlOhdOieOkbOmfOngOohOpiOqjO~O!WcO~P!eO!XkOSsXUsXVsXWsXYsX_sXdsXvsXxsX~OZmO~OdnO~OSWOUQOVWOWWOY[O__Od^OxoO~Ox{OZzP~Oe|P~P$SOe[X`[X{[Xa[X][X~PlOe!QO~P!eO`!RO~P!eO!W!SO~P!eO!W!Pie!Pi`!Pi{!Pia!Pi]!Pi~P!eO!W}ie}i`}i{}ia}i]}i~P!eO!W!Oie!Oi`!Oi{!Oia!Oi]!Oi~P!eO!W!Rie!Ri`!Ri{!Ria!Ri]!Ri~P!eO!W!Sie!Si`!Si{!Sia!Si]!Si~P!eO!W!Tie!Ti`!Ti{!Tia!Ti]!Ti~P!eO!W!Uie!Ui`!Ui{!Uia!Ui]!Ui~P!eO!W!Vie!Vi`!Vi{!Via!Vi]!Vi~P!eO{!TOZzX~OZ!VO~O{!WOe|X~P!eOe!YO~Ox{OZtX{tX~O{!TOZza~OeuX{uX~P$SO{!WOe|a~Oa!aO~P!eO]!bO~P!eOeua{ua~P!eO!W^!Re^!R`^!R{^!Ra^!R]^!R~P!eO",
  goto: "'O!WPP!XPP!^PPP!^PP!sP!^PPP!^#`PP!^!^PP!^P!^PPPPPP#u#{$RP$XP$`%gP%j%m%m&SP&i&i&i&i&iVXOPZwWOPZ^_abdefghijn!R!V!W!avWOPZ^_abdefghijn!R!V!W!aQ|mR![!Tw]OPZ^_abdefghijn!R!V!W!aQZORlZQ!U|R!]!UQ!X!OR!`!XSYOZR`PUTOPZQp^Qq_QraQsbQtdQueQvfQwgQxhQyiQzjQ!OnQ!Z!RQ!^!VQ!_!WR!c!aR}mR!PnwSOPZ^_abdefghijn!R!V!W!awUOPZ^_abdefghijn!R!V!W!awVOPZ^_abdefghijn!R!V!W!a",
  nodeNames: "âš  Program Assignment term String Boolean boolean Number Void LambdaExpr term term VariableName term IfExpr if then else InvokeExpr FunctionName term term ParenExpr BinOp term term FunOp ControlOp ArithOp term term term term term Statement",
  maxTerm: 55,
  skippedNodes: [0],
  repeatNodeCount: 3,
  tokenData: "(b~RiYZ!prs!ust#dtu#{vw$pxy${yz%Yz{%_{|%d|}%i}!O%n!O!P%s!P!Q&m!Q![&r!_!`'T!c!}#{#Q#R'Y#R#S#{#T#o#{#o#p'_#p#q'd#q#r(]$g;'S#{;'S;=`$j<%lO#{~!uO!W~~!xTOr!urs#Xs;'S!u;'S;=`#^<%lO!u~#^OS~~#aP;=`<%l!u~#iS!X~OY#dZ;'S#d;'S;=`#u<%lO#d~#xP;=`<%l#d~$QWx~tu#{!Q![#{!c!}#{#R#S#{#T#o#{$g;'S#{;'S;=`$j<%lO#{~$mP;=`<%l#{~$sPvw$v~${Oi~~%QPd~yz%T~%YOW~~%_Oe~~%dOm~~%iOp~~%nO{~~%sOq~~%xRV~!Q![%s!g!h&R#X#Y&R~&UR{|&_}!O&_!Q![&e~&bP!Q![&e~&jPV~!Q![&e~&rOn~~&wSV~!O!P%s!Q![&r!g!h&R#X#Y&R~'YOR~~'_Oo~~'dOY~R'iQZQ#o#p'o#p#q(WP'rP#q#r'uP'xPxy'{P(OPyz(RP(WO!QPP(]OhP~(bO]~",
  tokenizers: [0, 1],
  topRules: {"Program":[0,1],"Statement":[1,34]},
  specialized: [{term: 40, get: value => spec_identifier[value] || -1},{term: 48, get: value => spec_syntax[value] || -1}],
  tokenPrec: 0
})
